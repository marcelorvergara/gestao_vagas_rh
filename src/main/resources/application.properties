server.port=${PORT:8080}
spring.datasource.url=${DATA_SOURCE_URL}
spring.datasource.username=${DATA_SOURCE_USERNAME}
spring.datasource.password=${DATA_SOURCE_PASSWORD}

spring.jpa.hibernate.ddl-auto=update

security.token.secret=${SECURITY_TK_SECRET}
security.token.secret.candidate=${SECURITY_TK_SECRET_CANDIDATE}

# Actuator
management.endpoints.enabled-by-default=false
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.health.enabled=true
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true

### ElephantSQL requirements ###
# Set maximum number of pool connections
spring.datasource.hikari.maximum-pool-size=2
# Set minimum number of idle connections in the pool
spring.datasource.hikari.minimum-idle=2
# Set the maximum lifetime of a connection in the pool
spring.datasource.hikari.max-lifetime=1800000
# Set the connection timeout
spring.datasource.hikari.connection-timeout=30000
# Set the idle timeout
spring.datasource.hikari.idle-timeout=600000

### JPA/Hibernate troubleshooting ###
## Show SQL statements
#spring.jpa.show-sql=true
## Format SQL in logs
#spring.jpa.properties.hibernate.format_sql=true
## Hibernate logging level (use org.hibernate.SQL for just SQL)
#logging.level.org.hibernate.type=trace
## Spring Framework JDBC logging level
#logging.level.org.springframework.jdbc.core=debug